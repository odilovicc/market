/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Todo as PrismaTodo } from "@prisma/client";

export class TodoServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.TodoCountArgs, "select">): Promise<number> {
    return this.prisma.todo.count(args);
  }

  async todos(args: Prisma.TodoFindManyArgs): Promise<PrismaTodo[]> {
    return this.prisma.todo.findMany(args);
  }
  async todo(args: Prisma.TodoFindUniqueArgs): Promise<PrismaTodo | null> {
    return this.prisma.todo.findUnique(args);
  }
  async createTodo(args: Prisma.TodoCreateArgs): Promise<PrismaTodo> {
    return this.prisma.todo.create(args);
  }
  async updateTodo(args: Prisma.TodoUpdateArgs): Promise<PrismaTodo> {
    return this.prisma.todo.update(args);
  }
  async deleteTodo(args: Prisma.TodoDeleteArgs): Promise<PrismaTodo> {
    return this.prisma.todo.delete(args);
  }
}
